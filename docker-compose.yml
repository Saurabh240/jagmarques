version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - app-network

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: routes_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  kafka-connect:
    build:
      context: .
      dockerfile: Dockerfile.KafkaConnect
    container_name: kafka-connect
    depends_on:
      - kafka
      - postgres
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:29092
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "quickstart"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-configs"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
    networks:
      - app-network

  trips-application:
    build:
      context: .
      dockerfile: Dockerfile.Trips
    container_name: trips-application
    depends_on:
      - kafka
      - postgres
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_KAFKA_CONSUMER_GROUP_ID: trip-group
      SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET: earliest
      SPRING_APPLICATION_NAME: Trips-Application
      SPRING_SERVER_PORT: 8081
      SPRING_KAFKA_TOPIC_TRIPS: Trips
      SIMULATION_FIXED_RATE: 10000
      SIMULATION_PASSENGERS: Passenger1,Passenger2,Passenger3
    ports:
      - "8081:8081"
    networks:
      - app-network

  routes-application:
    build:
      context: .
      dockerfile: Dockerfile.Routes
    container_name: routes-application
    depends_on:
      - kafka
      - postgres
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_KAFKA_CONSUMER_GROUP_ID: route-group
      SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET: earliest
      SPRING_APPLICATION_NAME: Routes-Application
      SPRING_SERVER_PORT: 8082
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/routes_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SIMULATION_FIXED_RATE: 10000
      SIMULATION_ORIGINS: CityA,CityB,CityC
      SIMULATION_DESTINATIONS: CityD,CityE,CityF
      SIMULATION_TRANSPORTTYPES: Bus,Taxi,Train,Metro,Scooter
      SIMULATION_OPERATORS: Operator1,Operator2,Operator3
    ports:
      - "8080:8080"
    networks:
      - app-network

  streams-application:
    build:
      context: .
      dockerfile: Dockerfile.Streams
    container_name: streams-application
    depends_on:
      - kafka
      - postgres
      - routes-application
      - trips-application
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_KAFKA_CONSUMER_GROUP_ID: route-group
      SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET: earliest
      SPRING_APPLICATION_NAME: Routes-Application
      SPRING_SERVER_PORT: 8082
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/routes_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SIMULATION_FIXED_RATE: 10000
      SIMULATION_ORIGINS: CityA,CityB,CityC
      SIMULATION_DESTINATIONS: CityD,CityE,CityF
      SIMULATION_TRANSPORTTYPES: Bus,Taxi,Train,Metro,Scooter
      SIMULATION_OPERATORS: Operator1,Operator2,Operator3
    networks:
      - app-network

volumes:
  postgres_data:
  kafka-connect-data:

